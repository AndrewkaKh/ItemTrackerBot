from telegram.ext import CommandHandler, CallbackContext
from telegram import Update
import os
from sqlalchemy.sql import text

from bot.access_control.auth_decorator import require_auth
from bot.config import ADMIN_ID, REPORT_FOLDER
from database.db import SessionLocal
from reports.excel_generator import generate_excel
from reports.pdf_generator import generate_pdf

@require_auth
async def start(update: Update, context: CallbackContext):
    """
    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ /start.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∞–¥–º–∏–Ω –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å).
    """
    db = SessionLocal()
    try:
        user_id = update.effective_user.id  # ID —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        is_admin = str(user_id) == ADMIN_ID  # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏

        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        greeting = f"–ü—Ä–∏–≤–µ—Ç, {update.effective_user.first_name}! üëã\n"
        greeting += "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–º.\n"

        # –ö–æ–º–∞–Ω–¥—ã, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
        common_commands = """
üìä –ö–æ–º–∞–Ω–¥—ã –æ—Ç—á–µ—Ç–æ–≤ (–¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º):
- /export_reports - –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö –∏ –¥–≤–∏–∂–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ (Excel –∏ PDF).
- /filter <–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞> <–î–∞—Ç–∞ –∫–æ–Ω—Ü–∞> - –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥.
        """

        # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        user_commands = """
üíº –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:
- /add_item <–ê—Ä—Ç–∏–∫—É–ª>; <–ù–∞–∑–≤–∞–Ω–∏–µ>; <–°—Ç–æ–∏–º–æ—Å—Ç—å>; <–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π> - –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—É—Ñ–∞–±—Ä–∏–∫–∞—Ç.
- /movement <–ê—Ä—Ç–∏–∫—É–ª>; <–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ>; <–û—Ç–≥—Ä—É–∑–∫–∞>[; –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π] - –î–æ–±–∞–≤–∏—Ç—å –¥–≤–∏–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤.
- /add_product <–ù–∞–∑–≤–∞–Ω–∏–µ>; <–ê—Ä—Ç–∏–∫—É–ª>; <–°–æ—Å—Ç–∞–≤> - –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –∏ –µ–≥–æ —Å–æ—Å—Ç–∞–≤.
- /delete <–ê—Ä—Ç–∏–∫—É–ª> - –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—É—Ñ–∞–±—Ä–∏–∫–∞—Ç –∏–ª–∏ —Ç–æ–≤–∞—Ä.
        """

        # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        admin_commands = """
üîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:
- /add_user <username>; <–ò–º—è>; <–§–∞–º–∏–ª–∏—è> - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
- /pay_user <username> <—Å—É–º–º–∞> - –í—ã–ø–ª–∞—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
- /reset_db - –°–±—Ä–æ—Å–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã).
        """

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if is_admin:
            greeting += common_commands + user_commands + admin_commands
        else:
            greeting += common_commands + user_commands

        await update.message.reply_text(greeting)
    except Exception as e:
        await update.message.reply_text(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /start: {str(e)}")

@require_auth
async def export_reports(update: Update, context: CallbackContext):
    """
    –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –æ—Ç—á–µ—Ç–æ–≤ (–æ—Å—Ç–∞—Ç–∫–∏ –∏ –¥–≤–∏–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤) –≤ Excel –∏ PDF.
    """
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        db = SessionLocal()

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤
        stock_query = text("""
            SELECT 
                article AS –ê—Ä—Ç–∏–∫—É–ª, 
                name AS –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ, 
                in_stock AS –û—Å—Ç–∞—Ç–æ–∫, 
                cost AS –°—Ç–æ–∏–º–æ—Å—Ç—å
            FROM stock
        """)
        stock_data = db.execute(stock_query).fetchall()

        movement_query = text("""
            SELECT 
                date AS –î–∞—Ç–∞, 
                name AS –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ, 
                incoming AS –ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ, 
                outgoing AS –û—Ç–≥—Ä—É–∑–∫–∞, 
                comment AS –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
            FROM movements
        """)
        movement_data = db.execute(movement_query).fetchall()

        stock_pay_user_query = text("""
            SELECT
                first_name AS –ò–º—è,
                second_name AS –§–∞–º–∏–ª–∏—è,
                expenses AS "–û—Å—Ç–∞—Ç–æ–∫ —Å—Ä–µ–¥—Å—Ç–≤"
            FROM users
        """)
        stock_pay_user_data = db.execute(stock_pay_user_query).fetchall()

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤
        generate_excel(stock_data, movement_data, stock_pay_user_data)
        report_file = os.path.join(REPORT_FOLDER, "warehouse_report.xlsx")

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        with open(report_file, "rb") as f:
            await update.message.reply_document(f)

        await update.message.reply_text("–û—Ç—á–µ—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!")
    except Exception as e:
        await update.message.reply_text(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –æ—Ç—á–µ—Ç–æ–≤: {str(e)}")
    finally:
        db.close()

@require_auth
async def filter_data(update: Update, context: CallbackContext):
    """
    –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ –ø–µ—Ä–∏–æ–¥—É –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤.
    –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: /filter 2023-01-01 2023-12-31
    """
    try:
        args = context.args
        if len(args) < 2:
            await update.message.reply_text("–ü—Ä–∏–º–µ—Ä: /filter 2023-01-01 2023-12-31")
            return

        start_date, end_date = args[0], args[1]

        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        db = SessionLocal()

        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        movement_query = text("""
            SELECT date AS –î–∞—Ç–∞, name AS –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ, incoming AS –ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ, 
                   outgoing AS –û—Ç–≥—Ä—É–∑–∫–∞, comment AS –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
            FROM movements
            WHERE date BETWEEN :start_date AND :end_date
        """)
        filtered_movements = db.execute(movement_query, {"start_date": start_date, "end_date": end_date}).fetchall()

        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤
        stock_data = []  # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –æ—Å—Ç–∞—Ç–∫–∏ –ø–æ –ø–æ–ª—É—Ñ–∞–±—Ä–∏–∫–∞—Ç–∞–º
        movement_data = [
            {
                "–î–∞—Ç–∞": m.date,
                "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ": m.name,
                "–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ": m.incoming,
                "–û—Ç–≥—Ä—É–∑–∫–∞": m.outgoing,
                "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π": m.comment,
            }
            for m in filtered_movements
        ]

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤
        excel_files = generate_excel(stock_data, movement_data)
        pdf_files = generate_pdf(stock_data, movement_data)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        for file in excel_files + pdf_files:
            with open(file, "rb") as f:
                await update.message.reply_document(f)

        await update.message.reply_text(f"–î–∞–Ω–Ω—ã–µ –∑–∞ –ø–µ—Ä–∏–æ–¥ {start_date} - {end_date} —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!")
    except Exception as e:
        await update.message.reply_text(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {str(e)}")
    finally:
        db.close()

